{"version":3,"sources":["fetchPixabayserver.js","index.js"],"names":["fetchPixabay","name","page","response","fetch","ok","picture","json","Error","status","form","document","querySelector","btnLoadMore","gallery","doStuff","total","totalHits","hits","renderPosts","error","console","log","message","onSearch","e","preventDefault","elements","currentTarget","searchQuery","value","innerHTML","onLoadMore","markup","map","webformatURL","largeImageURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","addEventListener"],"mappings":";;;AAQC,aARc,eAAeA,EAAaC,EAAMC,GACzCC,MAAAA,QAAiBC,2EAA2EH,sDAAyDC,KACvJ,GAACC,EAASE,GAEP,CAEEC,aADeH,EAASI,OAFzB,MAAA,IAAIC,MAAML,EAASM,QAK5B,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACqEA,aA7ED,QAAA,oBACA,IAAA,EAAA,EAAA,QAAA,yBA4EC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA1ED,MAAMC,EAAOC,SAASC,cAAc,gBAC9BC,EAAcF,SAASC,cAAc,cACrCE,EAAUH,SAASC,cAAc,YAEvC,IAAIX,EAAO,GACPC,EAAO,EAEX,MAAMa,EAAU,MAAOd,EAAMC,KACvB,IACII,MAAAA,QAAgB,EAAaL,EAAAA,SAAAA,EAAMC,IACnC,MAAEc,EAAF,UAASC,EAAT,KAAoBC,GAASZ,EACnCa,EAAYD,GACZ,MAAOE,GACPC,QAAQC,IAAIF,EAAMG,WAMtB,eAAeC,EAASC,GACtBA,EAAEC,iBAEI,MAAA,SAAEC,GAAaF,EAAEG,eACjB,YAAEC,GAAgBF,EAEnBE,EAAYC,QAIjBhB,EAAQiB,UAAY,GAEpB9B,EAAO4B,EAAYC,MAInBf,EAAQd,EAFRC,EAAO,GAIP2B,EAAYC,MAAQ,IAMtB,eAAeE,IAGbjB,EAAQd,EAFRC,GAAQ,GAMV,SAASiB,EAAYD,GACbe,MAAAA,EAASf,EAAKgB,IAAI,EAAGC,aAAAA,EAAcC,cAAAA,EAAeC,KAAAA,EAAMC,MAAAA,EAAOC,MAAAA,EAAOC,SAAAA,EAAUC,UAAAA,4DAGpEN,WAAsBE,+GAGfC,gFAGAC,mFAGGC,oFAGCC,yDAK1BC,KAAK,IAER5B,EAAQ6B,mBAAmB,YAAaV,GAxD1CvB,EAAKkC,iBAAiB,SAAUpB,GAwBhCX,EAAY+B,iBAAiB,QAASZ","file":"src.af6029da.js","sourceRoot":"../src","sourcesContent":["export default async function fetchPixabay(name, page) {\n  const response = await fetch(`https://pixabay.com/api/?key=25718667-d0b548046b545cf0dd46ad07c&q=${name}&image_type=photo&safesearch=true&per_page=5&page=${page}`);\n  if (!response.ok) {\n    throw new Error(response.status);\n  } else {\n    const picture = await response.json();\n    return picture;\n  }\n};\n","import './css/styles.css';\nimport fetchPixabay from './fetchPixabayserver';\n\nconst form = document.querySelector(\"#search-form\");\nconst btnLoadMore = document.querySelector(\".load-more\");\nconst gallery = document.querySelector(\".gallery\");\n\nlet name = '';\nlet page = 1;\n\nconst doStuff = async (name, page) => {\n  try {\n    const picture = await fetchPixabay(name, page);\n    const { total, totalHits, hits } = picture;\n    renderPosts(hits);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nform.addEventListener(\"submit\", onSearch);\n\nasync function onSearch(e) {\n  e.preventDefault();\n\n  const { elements } = e.currentTarget;\n  const { searchQuery } = elements;\n\n  if (!searchQuery.value) {\n    return\n  };\n\n  gallery.innerHTML = '';\n\n  name = searchQuery.value;\n\n  page = 1;\n\n  doStuff(name, page);\n\n  searchQuery.value = '';\n};\n\n\nbtnLoadMore.addEventListener('click', onLoadMore);\n\nasync function onLoadMore() {\n  page += 1;\n\n  doStuff(name, page);\n};\n\n\nfunction renderPosts(hits) {\n  const markup = hits.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => {\n    return `\n      <div class=\"photo-card\">\n        <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n        <div class=\"info\">\n          <p class=\"info-item\">\n            <b>Likes</b> ${likes}\n          </p>\n          <p class=\"info-item\">\n            <b>Views</b> ${views}\n          </p>\n          <p class=\"info-item\">\n            <b>Comments</b> ${comments}\n          </p>\n          <p class=\"info-item\">\n            <b>Downloads</b> ${downloads}\n          </p>\n        </div>\n      </div>\n    `;\n  }).join(\"\");\n\n  gallery.insertAdjacentHTML(\"beforeend\", markup);\n};\n"]}